python -m http.server

- Як реалізовувати масштабування:
  знизу є select з вибором мастабу
  const widthDiskrette = 10; //ширина(px) якій відповідає обрана одиниця масштабу
  const scales = [           //масштаби  				
    {title: "1 година", length: 1000*60*60}, 
    {title: "2 години", length: 1000*60*60*2}, 
    {title: "6 годин", length: 1000*60*60*6}, 
    {title: "12 година", length: 1000*60*60*12}, 
    {title: "1 день", length: 1000*60*60*24}, 
    {title: "3 дні", length: 1000*60*60*24*3}, 
    {title: "10 днів", length: 1000*60*60*24*10}, 
    {title: "30 днів", length: 1000*60*60*24*30}, 
    {title: "90 днів", length: 1000*60*60*24*90}
  ];

  app.scaleIndex: 5	//індекс обраного масштабу; scales[app.scaleIndex];

- всередині рядка таблиці - div-полоска з position:absolute; left: {k}px;
  k вираховується відповідно до довжини даблиці і тривалості дати
- при наведенні на рядок таблиці підсвічувати його
- підсвічувати стовпець із сьогоднішнім днем якщо він в діапазоні дат
- обмежити глибину дерева підзадач не більше 3
- обмежити довжину назви задачі(через css)
- для кожної задачі обирати свій колір(і додати input[type="color"])
- при наведенні на полоску задачі показувати title з інфою про задачу
- при згортанні підзадач, батьківська задача пунктиром позначає довжину 
- у шапці правої таблиці 
  перший рядок - рік_місяць(березень 2016)
  другий рядок - комірки з номером дня (12)
  третій рядок - комірки з годинами(якщо актуально для цього масштабу) (14год)
- стовпці лівої табл:
  th{id}, - id задачі з modelData 
  td{color}(поки без colorpicker-а) - колір яким позначено задачу
  td{taskName} - назва задачі
суми всіх підзадач(від min(startDate) до max(endDate))
- Процес роботи:
  1) отримуємо з сервера modelData, 
  2) validateModelData() - проводимо валідацію, 
  3) evaluateAppData(modelData) - розраховуємо дані про стан додатку
    app.scaleIndex, app.modelViewData та ін.
потім створюємо modelViewData - в якому вже прописані кольори, кількість предків, та ін
потім викликаємо renderTable 
- при валідації перевіряти чи всі id унікальні, 
  перевіряти чи всі дати коректні
  startDate < endDate 
  мінімальна тривалість задачі - 1 година
  перевіряти чи підзадачі не виходять за діапазон тривалості батьківської задачі
  робити неактивними опції масштабу які більші за fullLength/2 (весь діапазон задач)
- додати readme.md з описом особливостей


modelData = [
{
 id: 1
 taskName: "task1",
 startDate: "",
 endDate: "",
 subtasks: [
   {
    id: 2
    taskName: "task2",
    startDate: "",
    endDate: "",
    subtasks: [...]
   }, /...
 ]
},/...
]

app.modelViewData = {};

